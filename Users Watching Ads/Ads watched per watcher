with game_stats AS
(
SELECT 
date as day,
source_id,
sum(impressions) as impressions_total,
sum(distinct_uid_impression) as distinct_uid_impressions,
sum(distinct_uid_request) as distinct_uid_request,
sum(revenue) as revenue,
sum(requests) as requests
FROM unique_users.day_country_source 
WHERE [date=daterange] and [country=Country] and [cast(source_id as string)=sourceGameId] 
AND distinct_uid_impression > 0
AND distinct_uid_request > 0
group by 1,2
ORDER BY 4 DESC 
)
SELECT
day,
source_id,
game_name,
gp.platform,
d.developer_id AS dev_id,
d.developer_name AS developer,
d.publisher_business_development_contact as cpma,
d.publisher_account_manager_contact as pub_ops,
sum(impressions_total)*1.0 / sum(distinct_uid_impressions) as ads_watched_per_watchr,
sum(revenue) * 1.0/ sum(distinct_uid_impressions) as arpdau_per_watchr,
sum(impressions_total)*1.0 / sum(distinct_uid_request) as ads_watched_per_DAU,
sum(revenue) * 1.0/ sum(distinct_uid_request) as arpdau,
sum(distinct_uid_impressions)*1.0 / sum(distinct_uid_request) as share_of_watchrs_over_DAU,
sum(requests)*1.0 / sum(distinct_uid_request) as ad_requests_per_DAU,
avg(distinct_uid_impressions) AS avg_DAU_watching_ads,
avg(distinct_uid_request - distinct_uid_impressions) as avg_dau_not_watching_ads,
avg(distinct_uid_request) AS avg_DAU,
sum(revenue) as revenue
FROM game_stats gs
left JOIN gameads.game_profiles gp
  ON gp.game_id = gs.source_id
left JOIN gameads.developers d
  ON d.developer_id = gp.developer_id
WHERE [platform=Platform]
and [publisher_account_manager_contact=AM_BD_contact] 
and [cast(source_id as string)=SourceGameId]
and revenue>0
GROUP BY 1,2,3,4,5,6,7,8
HAVING avg(distinct_uid_impressions) > 9
ORDER BY 1,17 DESC
limit 10000
