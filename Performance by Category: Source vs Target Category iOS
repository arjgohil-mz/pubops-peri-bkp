with raw_data as (
select
  gp_source.category_ids as source_category,
  gp_target.category_ids as target_category,
  split(gp_source.category_ids, ',')[SAFE_ORDINAL(1)] AS source1,
  split(gp_source.category_ids, ',')[SAFE_ORDINAL(2)]  AS source2,
  split(gp_source.category_ids, ',')[SAFE_ORDINAL(3)] AS source3,
  split(gp_target.category_ids, ',')[SAFE_ORDINAL(1)] AS target1,
  split(gp_target.category_ids, ',')[SAFE_ORDINAL(2)] AS target2,
  split(gp_target.category_ids, ',')[SAFE_ORDINAL(3)]  AS target3,
  sum(starts) as starts,
  sum(revenue) as revenue,
  sum(installs) as installs,
  sum(spend) as spend
  from reportingads.gameads_daily_aggregates gda
inner join (select game_id, platform, category_ids from gameads.game_profiles group by 1,2,3) gp_source on gda.source_id = gp_source.game_id
inner join (select game_id, platform, category_ids from gameads.game_profiles group by 1,2,3) gp_target on gda.target_id = gp_target.game_id
  where time >= timestamp_sub([most_recent_date], interval 7 day)
  and [gda.country=Country]
  and [CAST(target_id AS STRING)=TargetGameIdGameAdsAggregates]
  and [CAST(source_id AS STRING)=SourceGameIdGameAdsAggregates]  
  and [CAST(target_developer_id AS STRING)=TargetDeveloperId]
  and [CAST(source_developer_id AS STRING)=SourceDeveloperId]
  and gp_source.platform='ios'
  and gp_target.category_ids != '' and gp_source.category_ids != ''
  group by 1,2,3,4,5,6,7,8
 -- having sum(revenue)>100
order by 8 desc
limit 500000),
staging1 as 
    (select
     REGEXP_REPLACE(source1, ' ', '') as source,
     REGEXP_REPLACE(target1, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
    where source1 != '' and target1 != ''
     group by 1,2),
staging2 as 
    (select
     REGEXP_REPLACE(source1, ' ', '') as source,
     REGEXP_REPLACE(target2, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
      from raw_data 
    where source1 != '' and target2 != ''
     group by 1,2),
staging3 as 
    (select
     REGEXP_REPLACE(source1, ' ', '') as source,
     REGEXP_REPLACE(target3, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source1 != ''  and target3 != '' 
     group by 1,2),
staging4 as 
    (select
     REGEXP_REPLACE(source2, ' ', '') as source,
     REGEXP_REPLACE(target1, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source2 != ''  and target1 != '' 
     group by 1,2),
staging5 as 
    (select
     REGEXP_REPLACE(source2, ' ', '') as source,
     REGEXP_REPLACE(target2, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source2 != ''  and target2 != '' 
     group by 1,2),
staging6 as 
    (select
     REGEXP_REPLACE(source2, ' ', '') as source,
     REGEXP_REPLACE(target3, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source2 != ''  and target3 != '' 
     group by 1,2),
staging7 as 
    (select
     REGEXP_REPLACE(source3, ' ', '') as source,
     REGEXP_REPLACE(target1, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source3 != ''  and target1 != '' 
     group by 1,2),
staging8 as 
    (select
     REGEXP_REPLACE(source3, ' ', '') as source,
     REGEXP_REPLACE(target2, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source2 != ''  and target2 != '' 
     group by 1,2),
staging9 as 
    (select
     REGEXP_REPLACE(source3, ' ', '') as source,
     REGEXP_REPLACE(target3, ' ', '') as target,
     sum(starts) as starts,
     sum(revenue) as revenue,
     sum(installs) as installs,
     sum(spend) as spend
     from raw_data 
     where source3 != ''  and target3 != '' 
     group by 1,2),
transformed_data as(
    select
     one.source as source_category,
     one.target as target_category,
 coalesce(one.starts,0)+coalesce(two.starts,0)+coalesce(three.starts,0)+coalesce(four.starts,0)+coalesce(five.starts,0)+coalesce(six.starts,0)+coalesce(seven.starts,0)+coalesce(eight.starts,0)+coalesce(nine.starts,0) as starts,
 coalesce(one.revenue,0)+coalesce(two.revenue,0)+coalesce(three.revenue,0)+coalesce(four.revenue,0)+coalesce(five.revenue,0)+coalesce(six.revenue,0)+coalesce(seven.revenue,0)+coalesce(eight.revenue,0)+coalesce(nine.revenue,0) as revenue,
 coalesce(one.installs,0)+coalesce(two.installs,0)+coalesce(three.installs,0)+coalesce(four.installs,0)+coalesce(five.installs,0)+coalesce(six.installs,0)+coalesce(seven.installs,0)+coalesce(eight.installs,0)+coalesce(nine.installs,0) as installs,
 coalesce(one.spend,0)+coalesce(two.spend,0)+coalesce(three.spend,0)+coalesce(four.spend,0)+coalesce(five.spend,0)+coalesce(six.spend,0)+coalesce(seven.spend,0)+coalesce(eight.spend,0)+coalesce(nine.spend,0) as spend 
from staging1 one
    left join staging2 two on one.source=two.source and one.target=two.target
    left join staging3 three on one.source=three.source and one.target=three.target
    left join staging4 four on one.source=four.source and one.target=four.target
    left join staging5 five on one.source=five.source and one.target=five.target  
    left join staging6 six on one.source=six.source and one.target=six.target
    left join staging7 seven on one.source=seven.source and one.target=seven.target
    left join staging8 eight on one.source=eight.source and one.target=eight.target  
    left join staging9 nine on one.source=nine.source and one.target=nine.target  
  group by 1,2,3,4,5,6
),

final as (
  select
  cmt1.category_name as TargetCategory,
  cms1.category_name as SourceCategory,
  starts,
  installs,
  installs/starts as CVR,
  case when installs>0 then (spend/installs) else 0 end as CPI,
  spend/starts*1000 as Spend_eCPM,
  revenue/starts*1000 as Revenue_eCPM,
  spend,
  revenue
  from transformed_data td
  left join lookups.category_mapping cmt1
  on td.target_category = cmt1.category_id
  left join lookups.category_mapping cms1
  on td.source_category = cms1.category_id
  where starts > 200 and 
  cmt1.platform = 'ios' and cms1.platform = 'ios'
  and installs > 10 
  group by 1,2,3,4,5,6,7,8,9,10
  order by 1,2
)

select * from final
WHERE [targetCategory=TargetCategory]
AND [sourceCategory=SourceCategory]
