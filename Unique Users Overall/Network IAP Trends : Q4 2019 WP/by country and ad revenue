with data as
(
select date, upid, b.country, g.platform, g.developer_id, d.country as Developers_Country, g.game_name, g.game_id,g.store_id,
g.category_ids,

REGEXP_REPLACE(split(g.category_ids, ',')[SAFE_ORDINAL(1)], ' ', '')  AS source1,
REGEXP_REPLACE(split(g.category_ids, ',')[SAFE_ORDINAL(2)], ' ', '') AS source2,
REGEXP_REPLACE(split(g.category_ids, ',')[SAFE_ORDINAL(3)], ' ', '') AS source3,

dau_country , session_count_country
,  iap_verified_amount_country ,iap_verified_count_country, new_users_country

from reportingads.blender_daily_data b
join gameads.game_profiles g on b.upid=g.project_guid 
join gameads.developers d on g.developer_id=d.developer_id  


where [date=DateRange]  and store_id !='UNKNOWN'
  #and d.country is not null
),

data2 as
(

select date,upid,d.country as Serving_Country ,con.region as Serving_Region, developer_id, Developers_Country, con2.region as Developers_Region,
d.game_name, d.game_id,d.store_id,d.category_ids,
  cmt.category_name as Category1,
  cmt2.category_name as Category2,
  #cmt2.category_name as Category3,

sum(dau_country) as dau , sum(session_count_country) as number_of_sessions
,  sum(iap_verified_amount_country) iap_revenue  , sum(iap_verified_count_country) as  number_of_paying_users, sum(new_users_country) as new_users_today 
from data d
  left join lookups.category_mapping cmt
  on d.source1 = cmt.category_id and cmt.platform = d.platform
  left join lookups.category_mapping cmt2
  on d.source2 = cmt2.category_id and cmt2.platform = d.platform
left join lookups.country_region_mapping con
on lower(con.country)=d.country
left join lookups.country_region_mapping con2
on lower(con2.country)=lower(d.Developers_Country)

  group by 1,2,3,4,5,6,7,8,9,10,11,12,13
 
),

data3 as
(

select date,upid,developer_id,Developers_Country, Developers_Region,game_name,concat(Category1,',',Category2) as Category,Serving_Country,Serving_Region,
avg(dau) as dau , avg(number_of_sessions) as number_of_sessions
,  avg(iap_revenue) as iap_revenue  , avg(number_of_paying_users) as number_of_paying_users, avg(new_users_today) as new_users_today 

from data2
where  concat(Category1,',',Category2) is not null
group by 1,2,3,4,5,6,7,8,9
  
 ),

data4 as
(
  select cast(time as date) as date, lower(country) as country , platform, source_developer_id,source_id as game_id,source_name, sum(revenue) ad_revenue, sum(starts) as ad_starts
from reportingads.gameads_daily_aggregates  
where [time=DateRange]
group by 1,2,3,4,5,6
  )

select 
d3.date,upid,developer_id,Developers_Country, Developers_Region,game_name, Category,Serving_Country,Serving_Region,
max(dau) as dau , max(number_of_sessions) as number_of_sessions
, max(number_of_paying_users) as number_of_paying_users, max(new_users_today) as new_users_today ,  max(iap_revenue) as iap_revenue  , sum(d4.ad_revenue) as Ad_Revenue, (max(iap_revenue)+sum(d4.ad_revenue)) as total_revenue

from data3 d3 left join data4 d4 
on d3.date=d4.date and d3.developer_id=d4.source_developer_id and d3.Serving_Country=d4.country
group by 1,2,3,4,5,6,7,8,9 

order by 1,3,12 desc
